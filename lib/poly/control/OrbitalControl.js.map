{"version":3,"sources":["../../../src/poly/control/OrbitalControl.js"],"names":["getCursorPos","e","touches","x","pageX","y","pageY","clientX","clientY","UP","fromValues","ANGLE_LIMIT","Math","PI","OrbitalCameraControl","mViewMatrix","mRadius","mListenerTarget","window","_mtxTarget","_radius","_targetRadius","_listenerTarget","_isDown","_rotation","create","center","easing","senstivity","senstivityRotation","_isLocked","_isZoomLocked","_rx","_trx","_prevx","_ry","_try","_prevy","_quat","_vec","_position","_mtx","_mouseDown","_mouse","_init","addEventListener","_onDown","_onUp","_onMove","_onWheel","mValue","w","wheelDelta","d","detail","value","dx","dy","identity","rotateY","rotateX","set","transformQuat","lookAt","copy","sin","tr","cos"],"mappings":"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","file":"OrbitalControl.js","sourcesContent":["// https://github.com/yiwenl\n\nimport { vec3, mat4, quat } from 'gl-matrix';\n\nconst getCursorPos = function (e) {\n    if(e.touches) {\n        return {\n            x:e.touches[0].pageX,\n            y:e.touches[0].pageY\n        };\n    } else {\n        return {\n            x:e.clientX,\n            y:e.clientY\n        };\n    }\n};\n\nconst UP = vec3.fromValues(0, 1, 0);\nconst ANGLE_LIMIT = (Math.PI/2 - 0.01);\n\nclass OrbitalCameraControl {\n    constructor(mViewMatrix, mRadius = 5, mListenerTarget = window) {\n        this._mtxTarget = mViewMatrix;\n        this._radius = mRadius;\n        this._targetRadius = mRadius;\n        this._listenerTarget = mListenerTarget;\n        this._isDown = false;\n        this._rotation = mat4.create();\n        this.center = vec3.create();\n\n        this.easing = 0.1;\n        this.senstivity = 1;\n        this.senstivityRotation = 1;\n\n        this._isLocked = false;\n        this._isZoomLocked = false;\n        this._rx = 0;\n        this._trx = 0;\n        this._prevx = 0;\n        this._ry = 0;\n        this._try = 0;\n        this._prevy = 0;\n\n        this._quat = quat.create();\n        this._vec = vec3.create();\n        this._position = vec3.create();\n        this._mtx = mat4.create();\n\n\n        this._mouseDown = {\n            x:0,\n            y:0\n        };\n\n        this._mouse = {\n            x:0,\n            y:0\n        };\n\n        this._init();\n    }\n\n\n    _init() {\n        this._listenerTarget.addEventListener('mousedown', (e) => this._onDown(e));\n        this._listenerTarget.addEventListener('mouseup', () => this._onUp());\n        this._listenerTarget.addEventListener('mousemove', (e) => this._onMove(e));\n\n        this._listenerTarget.addEventListener('touchstart', (e) => this._onDown(e));\n        this._listenerTarget.addEventListener('touchend', () => this._onUp());\n        this._listenerTarget.addEventListener('touchmove', (e) => this._onMove(e));\n\n        this._listenerTarget.addEventListener('mousewheel', (e) => this._onWheel(e));\n        this._listenerTarget.addEventListener('DOMMouseScroll', (e) => this._onWheel(e));\n    }\n\n\n    lock(mValue) {\n        this._isLocked = mValue;\n    }\n\n\n    lockZoom(mValue) {\n        this._isZoomLocked = mValue;\n    }\n\n\n    _onWheel(e) {\n        if(this._isZoomLocked) {\n            return;\n        }\n        const w = e.wheelDelta;\n        const d = e.detail;\n        let value = 0;\n        if (d) {\n            if (w) {\n                value = w / d / 40 * d > 0 ? 1 : -1; // Opera\n            } else {\n                value = -d / 3;              // Firefox;         TODO: do not /3 for OS X\n            }\n        } else {\n            value = w / 120;\n        }\n\n        this._targetRadius += (-value * 2 * this.senstivity);\n        if(this._targetRadius < 0.01) {\n            this._targetRadius = 0.01;\n        }\n    }\n\n\n    _onDown(e) {\n        if(this._isLocked) {    return;    }\n        this._isDown = true;\n\n        this._mouseDown = getCursorPos(e);\n        this._mouse = getCursorPos(e);\n\n        this._prevx = this._trx = this._rx;\n        this._prevy = this._try = this._ry;\n    }\n\n\n    _onMove(e) {\n        if(this._isLocked) {    return;    }\n        if(!this._isDown)    {    return;    }\n        this._mouse = getCursorPos(e);\n    }\n\n\n    _onUp() {\n        if(this._isLocked) {    return;    }\n        this._isDown = false;\n    }\n\n\n    update() {\n        const dx = this._mouse.x - this._mouseDown.x;\n        const dy = this._mouse.y - this._mouseDown.y;\n\n        const senstivity = 0.02 * this.senstivityRotation;\n        this._try = this._prevy - dx * senstivity;\n        this._trx = this._prevx - dy * senstivity;\n\n        if(this._trx < -Math.PI/2 + 0.01) {\n            this._trx = -Math.PI/2 + 0.01;\n        } else if(this._trx > Math.PI/2 - 0.01) {\n            this._trx = Math.PI/2 - 0.01;\n        }\n\n        this._rx += (this._trx - this._rx) * this.easing;\n        this._ry += (this._try - this._ry) * this.easing;\n        this._radius += (this._targetRadius - this._radius) * this.easing;\n\n        quat.identity(this._quat);\n        quat.rotateY(this._quat, this._quat, this._ry);\n        quat.rotateX(this._quat, this._quat, this._rx);\n\n        vec3.set(this._vec, 0, 0, this._radius);\n        vec3.transformQuat(this._vec, this._vec, this._quat);\n\n        mat4.identity(this._mtx);\n        mat4.lookAt(this._mtx, this._vec, this.center, UP);\n\n\n        if(this._mtxTarget) {\n            mat4.copy(this._mtxTarget, this._mtx);\n        }\n\n\n        this._position[1] = -Math.sin(this._rx) * this._radius;\n        const tr = Math.cos(this._rx) * this._radius;\n        this._position[2] = Math.cos(this._ry + Math.PI * 2) * tr;\n        this._position[0] = Math.sin(this._ry + Math.PI * 2) * tr;\n        // console.log(this._position);\n\n\n\n        // vec3.add(this._position, this._position, this._position)\n    }\n\n}\n\n\nexport default OrbitalCameraControl\n"]}