{"version":3,"sources":["../../../src/poly/camera/Camera.js"],"names":["Camera","aspectRatio","create","matrix","projectionMatrix","mRX","mRY","mRZ","mT","inverseViewProj","cameraDir","position","pos","ray","proj","view","multiply","invert","transformMat4","sub","normalize","origin","direction","target","up","lookAt","angle","fromYRotation","identity","fromXRotation","x","y","z","translate","perspective","fov","near","far","aspect","left","right","bottom","top","dst","Float32Array"],"mappings":"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","file":"Camera.js","sourcesContent":["import { mat4, vec3 } from 'gl-matrix';\nimport Ray from '../core/Ray';\n\nclass Camera\n{\n    constructor()\n    {\n        this.aspectRatio = mat4.create();\n\n        this.matrix = mat4.create(); // changes on the camera\n        this.projectionMatrix = mat4.create();\n\n        this.mRX = mat4.create();\n        this.mRY = mat4.create();\n        this.mRZ = mat4.create();\n        this.mT = mat4.create();\n\n        this.inverseViewProj = mat4.create();\n\t\tthis.cameraDir = vec3.create();\n\n        this.position = vec3.create();\n    }\n\n    getRay(pos, ray) {\n\t\tconst proj = this.projectionMatrix;\n\t\tconst view = this.matrix;\n\n\t\tmat4.multiply(this.inverseViewProj, proj, view);\n\t\tmat4.invert(this.inverseViewProj, this.inverseViewProj);\n\n\t\tvec3.transformMat4(this.cameraDir, pos, this.inverseViewProj);\n\t\tvec3.sub(this.cameraDir, this.cameraDir, this.position);\n\t\tvec3.normalize(this.cameraDir, this.cameraDir);\n\n\t\tif (!ray) {\n\t\t\tray = new Ray(this.position, this.cameraDir);\n\t\t} else {\n\t\t\tray.origin = this.position;\n\t\t\tray.direction = this.cameraDir;\n\t\t}\n\n\n\t\treturn ray;\n\t}\n\n    lookAt(target, up = [0, 1, 0])\n    {\n        mat4.lookAt(this.matrix, this.position, target, up);\n    }\n\n    rotateY(angle)\n    {\n        mat4.fromYRotation(this.mRY, angle);\n\n    }\n    rotateX(angle)\n    {\n        mat4.identity(this.mRX);\n        mat4.fromXRotation(this.mRX, angle);\n\n    }\n\n    rotateZ(angle)\n    {\n        mat4.identity(this.mRZ);\n        mat4.fromXRotation(this.mRZ, angle);\n\n    }\n\n    setRotation(x, y, z)\n    {\n    }\n\n    setPosition(x, y, z)\n    {\n        this.position = [x, y, z]\n        mat4.identity(this.mT, this.mT);\n        mat4.translate(this.mT, this.mT, [x, y, z]);\n    }\n\n    setAspectRatio(aspectRatio)\n    {\n        this.aspectRatio = aspectRatio;\n        this.perspective(this.fov, aspectRatio, this.near, this.far);\n    }\n\n    perspective(fov, aspect, near, far)\n    {\n        mat4.perspective(this.projectionMatrix, fov, aspect, near, far);\n\n        this.fov = fov;\n        this.near = near;\n        this.far = far;\n        this.aspect = aspect;\n    }\n\n    orthographic(left, right, bottom, top, near, far, dst)\n    {\n        dst = dst || new Float32Array(16);\n\n        dst[ 0] = 2 / (right - left);\n        dst[ 1] = 0;\n        dst[ 2] = 0;\n        dst[ 3] = 0;\n        dst[ 4] = 0;\n        dst[ 5] = 2 / (top - bottom);\n        dst[ 6] = 0;\n        dst[ 7] = 0;\n        dst[ 8] = 0;\n        dst[ 9] = 0;\n        dst[10] = 2 / (near - far);\n        dst[11] = 0;\n        dst[12] = (left + right) / (left - right);\n        dst[13] = (bottom + top) / (bottom - top);\n        dst[14] = (near + far) / (near - far);\n        dst[15] = 1;\n\n        return dst;\n    }\n}\n\nexport default Camera;\n"]}