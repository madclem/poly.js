{"version":3,"sources":["../../../src/poly/camera/Camera.js"],"names":["Camera","aspectRatio","create","matrix","viewMatrix","inverseViewMatrix","projection","orientation","mRX","mRY","mRZ","mT","position","target","up","lookAt","angle","identity","fromYRotation","fromXRotation","x","y","z","translate","perspective","fov","near","far","aspect","left","right","bottom","top","dst","Float32Array"],"mappings":";;;;;;;;AAAA;;;;IAEMA,M;AAEJ,oBACA;AAAA;;AACE,SAAKC,WAAL,GAAmB,eAAKC,MAAL,EAAnB;AACA,SAAKC,MAAL,GAAc,eAAKD,MAAL,EAAd;AACA,SAAKE,UAAL,GAAkB,eAAKF,MAAL,EAAlB;AACA,SAAKG,iBAAL,GAAyB,eAAKH,MAAL,EAAzB;AACA,SAAKI,UAAL,GAAkB,eAAKJ,MAAL,EAAlB;AACA,SAAKK,WAAL,GAAmB,eAAKL,MAAL,EAAnB;;AAEA,SAAKM,GAAL,GAAW,eAAKN,MAAL,EAAX;AACA,SAAKO,GAAL,GAAW,eAAKP,MAAL,EAAX;AACA,SAAKQ,GAAL,GAAW,eAAKR,MAAL,EAAX;AACA,SAAKS,EAAL,GAAU,eAAKT,MAAL,EAAV;;AAEA,SAAKU,QAAL,GAAgB,eAAKV,MAAL,EAAhB;AACD;;;;2BAEMW,M,EACP;AAAA,UADeC,EACf,uEADoB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CACpB;;AACA,qBAAKC,MAAL,CAAY,KAAKZ,MAAjB,EAAyB,KAAKS,QAA9B,EAAwCC,MAAxC,EAAgDC,EAAhD;AACA;;;4BAEQE,K,EACR;AACE,qBAAKC,QAAL,CAAc,KAAKR,GAAnB;AACA,qBAAKS,aAAL,CAAmB,KAAKT,GAAxB,EAA6BO,KAA7B;AAED;;;4BACOA,K,EACR;AACE,qBAAKC,QAAL,CAAc,KAAKT,GAAnB;AACA,qBAAKW,aAAL,CAAmB,KAAKX,GAAxB,EAA6BQ,KAA7B;AAED;;;4BAEOA,K,EACR;AACE,qBAAKC,QAAL,CAAc,KAAKP,GAAnB;AACA,qBAAKS,aAAL,CAAmB,KAAKT,GAAxB,EAA6BM,KAA7B;AAED;;;gCAEWI,C,EAAGC,C,EAAGC,C,EAClB,CACC;;;gCAEWF,C,EAAGC,C,EAAGC,C,EAClB;AACE,WAAKV,QAAL,GAAgB,CAACQ,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAhB;AACA,qBAAKL,QAAL,CAAc,KAAKN,EAAnB,EAAuB,KAAKA,EAA5B;AACA,qBAAKY,SAAL,CAAe,KAAKZ,EAApB,EAAwB,KAAKA,EAA7B,EAAiC,CAACS,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAjC;AAEF;;;mCAEerB,W,EACf;AACA,WAAKA,WAAL,GAAmBA,WAAnB;AACA,WAAKuB,WAAL,CAAiB,KAAKC,GAAtB,EAA2BxB,WAA3B,EAAwC,KAAKyB,IAA7C,EAAmD,KAAKC,GAAxD;AACA;;;gCAEYF,G,EAAKG,M,EAAQF,I,EAAMC,G,EAC/B;AACE,qBAAKV,QAAL,CAAc,KAAKd,MAAnB;;AAEF,qBAAKqB,WAAL,CAAiB,KAAKlB,UAAtB,EAAkCmB,GAAlC,EAAuCG,MAAvC,EAA+CF,IAA/C,EAAqDC,GAArD;;AAEE,WAAKF,GAAL,GAAWA,GAAX;AACA,WAAKC,IAAL,GAAYA,IAAZ;AACA,WAAKC,GAAL,GAAWA,GAAX;AACA,WAAKC,MAAL,GAAcA,MAAd;AACD;;;iCAEYC,I,EAAMC,K,EAAOC,M,EAAQC,G,EAAKN,I,EAAMC,G,EAAKM,G,EAClD;AACEA,YAAMA,OAAO,IAAIC,YAAJ,CAAiB,EAAjB,CAAb;;AAEAD,UAAK,CAAL,IAAU,KAAKH,QAAQD,IAAb,CAAV;AACAI,UAAK,CAAL,IAAU,CAAV;AACAA,UAAK,CAAL,IAAU,CAAV;AACAA,UAAK,CAAL,IAAU,CAAV;AACAA,UAAK,CAAL,IAAU,CAAV;AACAA,UAAK,CAAL,IAAU,KAAKD,MAAMD,MAAX,CAAV;AACAE,UAAK,CAAL,IAAU,CAAV;AACAA,UAAK,CAAL,IAAU,CAAV;AACAA,UAAK,CAAL,IAAU,CAAV;AACAA,UAAK,CAAL,IAAU,CAAV;AACAA,UAAI,EAAJ,IAAU,KAAKP,OAAOC,GAAZ,CAAV;AACAM,UAAI,EAAJ,IAAU,CAAV;AACAA,UAAI,EAAJ,IAAU,CAACJ,OAAOC,KAAR,KAAkBD,OAAOC,KAAzB,CAAV;AACAG,UAAI,EAAJ,IAAU,CAACF,SAASC,GAAV,KAAkBD,SAASC,GAA3B,CAAV;AACAC,UAAI,EAAJ,IAAU,CAACP,OAAOC,GAAR,KAAgBD,OAAOC,GAAvB,CAAV;AACAM,UAAI,EAAJ,IAAU,CAAV;;AAEA,aAAOA,GAAP;AACD;;;;;;kBAGYjC,M","file":"Camera.js","sourcesContent":["import { mat4, vec3 } from 'gl-matrix';\n\nclass Camera \n{\n  constructor()\n  {\n    this.aspectRatio = mat4.create();\n    this.matrix = mat4.create();\n    this.viewMatrix = mat4.create();\n    this.inverseViewMatrix = mat4.create();\n    this.projection = mat4.create();\n    this.orientation = mat4.create();\n\n    this.mRX = mat4.create();\n    this.mRY = mat4.create();\n    this.mRZ = mat4.create();\n    this.mT = mat4.create();\n\n    this.position = vec3.create();\n  }\n\n  lookAt(target, up = [0, 1, 0]) \n  {\n\t\tmat4.lookAt(this.matrix, this.position, target, up);\n\t}\n\n  rotateY(angle) \n  {\n    mat4.identity(this.mRY);\n    mat4.fromYRotation(this.mRY, angle);\n\n  }\n  rotateX(angle) \n  {\n    mat4.identity(this.mRX);\n    mat4.fromXRotation(this.mRX, angle);\n\n  }\n\n  rotateZ(angle) \n  {\n    mat4.identity(this.mRZ);\n    mat4.fromXRotation(this.mRZ, angle);\n\n  }\n\n  setRotation(x, y, z) \n  {\n  }\n\n  setPosition(x, y, z) \n  {\n    this.position = [x, y, z]\n    mat4.identity(this.mT, this.mT);\n    mat4.translate(this.mT, this.mT, [x, y, z]);\n\n\t}\n\n  setAspectRatio(aspectRatio) \n  {\n\t\tthis.aspectRatio = aspectRatio;\n\t\tthis.perspective(this.fov, aspectRatio, this.near, this.far);\n\t}\n\n  perspective(fov, aspect, near, far) \n  {\n    mat4.identity(this.matrix);\n\n\t\tmat4.perspective(this.projection, fov, aspect, near, far);\n\n    this.fov = fov;\n    this.near = near;\n    this.far = far;\n    this.aspect = aspect;\n  }\n\n  orthographic(left, right, bottom, top, near, far, dst) \n  {\n    dst = dst || new Float32Array(16);\n\n    dst[ 0] = 2 / (right - left);\n    dst[ 1] = 0;\n    dst[ 2] = 0;\n    dst[ 3] = 0;\n    dst[ 4] = 0;\n    dst[ 5] = 2 / (top - bottom);\n    dst[ 6] = 0;\n    dst[ 7] = 0;\n    dst[ 8] = 0;\n    dst[ 9] = 0;\n    dst[10] = 2 / (near - far);\n    dst[11] = 0;\n    dst[12] = (left + right) / (left - right);\n    dst[13] = (bottom + top) / (bottom - top);\n    dst[14] = (near + far) / (near - far);\n    dst[15] = 1;\n\n    return dst;\n  }\n}\n\nexport default Camera;\n"]}