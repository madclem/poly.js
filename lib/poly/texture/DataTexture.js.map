{"version":3,"sources":["../../../src/poly/texture/DataTexture.js"],"names":["DataTexture","data","width","height","format","gl","POLY","RGBA","floatTextures","getExtension","Error","halfFloat","type","UNSIGNED_BYTE","extHalfFloat","checkExtension","FLOAT","HALF_FLOAT_OES","console","log","_texture","createTexture","bindTexture","TEXTURE_2D","alignment","pixelStorei","UNPACK_ALIGNMENT","texImage2D","utils","isPowerOfTwo","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","index","activeTexture","TEXTURE0"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,W;AAEpB,sBAAYC,IAAZ,EACA;AAAA,MADkBC,KAClB,uEAD0B,GAC1B;AAAA,MAD+BC,MAC/B,uEADwC,GACxC;AAAA,MAD6CC,MAC7C;;AAAA;;AACC,OAAKC,EAAL,GAAUC,KAAKD,EAAf;AACA,MAAIA,KAAK,KAAKA,EAAd;;AAEAD,WAASA,UAAUC,GAAGE,IAAtB;;AAEA,MAAIC,gBAAgB,uBAAIC,YAAJ,CAAiB,mBAAjB,CAApB;;AAEM,MAAI,CAAC,uBAAIA,YAAJ,CAAiB,mBAAjB,CAAL,EAA2C;AACzC,SAAM,IAAIC,KAAJ,CAAW,8BAAX,CAAN;AACD;;AAED,MAAIC,YAAY,uBAAIF,YAAJ,CAAiB,wBAAjB,CAAhB;AACA,MAAIG,OAAOP,GAAGQ,aAAd;AACA,MAAMC,eAAe,uBAAIL,YAAJ,CAAiB,wBAAjB,CAArB;AACA,yBAAIA,YAAJ,CAAiB,0BAAjB;;AAEA,MAAI,uBAAIM,cAAJ,CAAmB,mBAAnB,CAAJ,EACA;AACIH,UAAOP,GAAGW,KAAV;AACH,GAHD,MAIK,IAAGF,YAAH,EAAiB;AAClBF,UAAOE,aAAaG,cAApB;AACH;;AAEPC,UAAQC,GAAR,CAAYP,IAAZ,EAAkBP,GAAGW,KAArB;;AAGA,OAAKI,QAAL,GAAgBf,GAAGgB,aAAH,EAAhB;AACAhB,KAAGiB,WAAH,CAAejB,GAAGkB,UAAlB,EAA8B,KAAKH,QAAnC;AACA,MAAMI,YAAY,CAAlB;AACAnB,KAAGoB,WAAH,CAAepB,GAAGqB,gBAAlB,EAAoCF,SAApC;;AAEAnB,KAAGsB,UAAH,CAActB,GAAGkB,UAAjB,EAA6B,CAA7B,EAAgCnB,MAAhC,EAAwCF,KAAxC,EAA+CC,MAA/C,EAAuD,CAAvD,EAA0DC,MAA1D,EAAkEQ,IAAlE,EAAwEX,IAAxE;;AAGA,MAAGK,KAAKsB,KAAL,CAAWC,YAAX,CAAwB3B,KAAxB,KAAkCI,KAAKsB,KAAL,CAAWC,YAAX,CAAwB1B,MAAxB,CAArC,EACE,CACC;;AAEHE,KAAGyB,aAAH,CAAiBzB,GAAGkB,UAApB,EAAgClB,GAAG0B,kBAAnC,EAAuD1B,GAAG2B,OAA1D;AACA3B,KAAGyB,aAAH,CAAiBzB,GAAGkB,UAApB,EAAgClB,GAAG4B,kBAAnC,EAAuD5B,GAAG2B,OAA1D;AACA3B,KAAGyB,aAAH,CAAiBzB,GAAGkB,UAApB,EAAgClB,GAAG6B,cAAnC,EAAmD7B,GAAG8B,aAAtD;AACA9B,KAAGyB,aAAH,CAAiBzB,GAAGkB,UAApB,EAAgClB,GAAG+B,cAAnC,EAAmD/B,GAAG8B,aAAtD;AACC;AACA;AAED;;;;yBAGD;AAAA,OADKE,KACL,uEADa,CACb;;AACC,OAAIhC,KAAK,KAAKA,EAAd;AACAA,MAAGiC,aAAH,CAAiBjC,GAAGkC,QAAH,GAAcF,KAA/B;AACGhC,MAAGiB,WAAH,CAAejB,GAAGkB,UAAlB,EAA8B,KAAKH,QAAnC;AACH;;;;;;kBAzDmBpB,W","file":"DataTexture.js","sourcesContent":["import ext from '../GLExtensions';\n\nexport default class DataTexture\n{\n\tconstructor(data, width = 256, height = 256, format)\n\t{\n\t\tthis.gl = POLY.gl;\n\t\tlet gl = this.gl;\n\n\t\tformat = format || gl.RGBA;\n\n\t\tvar floatTextures = ext.getExtension('OES_texture_float');\n\n        if (!ext.getExtension(\"OES_texture_float\")){\n          throw new Error( \"float textures not supported\" );\n        }\n\n        var halfFloat = ext.getExtension(\"OES_texture_half_float\");\n        let type = gl.UNSIGNED_BYTE;\n        const extHalfFloat = ext.getExtension('OES_texture_half_float');\n        ext.getExtension(\"OES_texture_float_linear\");\n\n        if (ext.checkExtension('OES_texture_float'))\n        {\n            type = gl.FLOAT;\n        }\n        else if(extHalfFloat) {\n            type = extHalfFloat.HALF_FLOAT_OES;\n        }\n\n\t\tconsole.log(type, gl.FLOAT);\n\n\n\t\tthis._texture = gl.createTexture();\n\t\tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t\tconst alignment = 1;\n\t\tgl.pixelStorei(gl.UNPACK_ALIGNMENT, alignment);\n\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, 0, format, type, data);\n\n\n\t\tif(POLY.utils.isPowerOfTwo(width) && POLY.utils.isPowerOfTwo(height))\n  \t\t{\n  \t\t}\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n \t\t// gl.texParameteri ( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT ) ;\n\t\t // gl.texParameteri ( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT ) ;\n\n\t}\n\n\tbind(index = 0)\n\t{\n\t\tlet gl = this.gl;\n\t\tgl.activeTexture(gl.TEXTURE0 + index);\n    \tgl.bindTexture(gl.TEXTURE_2D, this._texture);\n\t}\n}\n"]}