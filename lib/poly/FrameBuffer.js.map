{"version":3,"sources":["../../src/poly/FrameBuffer.js"],"names":["FrameBuffer","width","height","texture","gl","POLY","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","createTexture","gltexture","Texture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","texImage2D","RGBA","UNSIGNED_BYTE","renderBufferDepth","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","clean","w","h","viewport","canvas"],"mappings":";;;;;;;;;;IAAqBA,W;AAEjB,2BACA;AAAA,YADYC,KACZ,uEADoB,GACpB;AAAA,YADyBC,MACzB,uEADkC,GAClC;AAAA,YADuCC,OACvC;;AAAA;;AAEI,aAAKC,EAAL,GAAUC,KAAKD,EAAf;AACA,YAAIA,KAAK,KAAKA,EAAd;;AAEA,aAAKH,KAAL,GAAaA,KAAb;AACA,aAAKC,MAAL,GAAcA,MAAd;;AAEA;;;;AAIA;AACA,aAAKI,WAAL,GAAmBF,GAAGG,iBAAH,EAAnB;AACAH,WAAGI,eAAH,CAAmBJ,GAAGK,WAAtB,EAAmC,KAAKH,WAAxC;;AAEA;AACA,aAAKH,OAAL,GAAeC,GAAGM,aAAH,EAAf;AACA,aAAKC,SAAL,GAAiB,IAAIN,KAAKO,OAAT,CAAiB,KAAKT,OAAtB,EAA+B,IAA/B,CAAjB;;AAEAC,WAAGS,WAAH,CAAeT,GAAGU,UAAlB,EAA8B,KAAKX,OAAnC;AACAC,WAAGW,aAAH,CAAiBX,GAAGU,UAApB,EAAgCV,GAAGY,kBAAnC,EAAuDZ,GAAGa,MAA1D;AACAb,WAAGW,aAAH,CAAiBX,GAAGU,UAApB,EAAgCV,GAAGc,kBAAnC,EAAuDd,GAAGe,qBAA1D;AACAf,WAAGgB,cAAH,CAAkBhB,GAAGU,UAArB;AACAV,WAAGiB,UAAH,CAAcjB,GAAGU,UAAjB,EAA6B,CAA7B,EAAgCV,GAAGkB,IAAnC,EAAyC,KAAKrB,KAA9C,EAAqD,KAAKC,MAA1D,EAAkE,CAAlE,EAAqEE,GAAGkB,IAAxE,EAA8ElB,GAAGmB,aAAjF,EAAgG,IAAhG;;AAEA;AACA,YAAIC,oBAAoBpB,GAAGqB,kBAAH,EAAxB;AACArB,WAAGsB,gBAAH,CAAoBtB,GAAGuB,YAAvB,EAAqCH,iBAArC;AACApB,WAAGwB,mBAAH,CAAuBxB,GAAGuB,YAA1B,EAAwCvB,GAAGyB,iBAA3C,EAA8D,KAAK5B,KAAnE,EAA0E,KAAKC,MAA/E;;AAEA;AACAE,WAAG0B,oBAAH,CAAwB1B,GAAGK,WAA3B,EAAwCL,GAAG2B,iBAA3C,EAA8D3B,GAAGU,UAAjE,EAA6E,KAAKX,OAAlF,EAA2F,CAA3F;AACAC,WAAG4B,uBAAH,CAA2B5B,GAAGK,WAA9B,EAA2CL,GAAG6B,gBAA9C,EAAgE7B,GAAGuB,YAAnE,EAAiFH,iBAAjF;;AAGA,aAAKU,KAAL;AACH;;;;6BAEIC,C,EAAGC,C,EACR;AACI,iBAAKnC,KAAL,GAAakC,KAAK,KAAKlC,KAAvB;AACA,iBAAKC,MAAL,GAAckC,KAAK,KAAKlC,MAAxB;;AAEA,gBAAIE,KAAK,KAAKA,EAAd;AACAA,eAAGI,eAAH,CAAmBJ,GAAGK,WAAtB,EAAmC,KAAKH,WAAxC;AACAF,eAAGiC,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAKpC,KAAvB,EAA8B,KAAKC,MAAnC;AACH;;;iCAGD;AACI,gBAAIE,KAAK,KAAKA,EAAd;AACAA,eAAGI,eAAH,CAAmBJ,GAAGK,WAAtB,EAAmC,IAAnC;AACAL,eAAGiC,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkBjC,GAAGkC,MAAH,CAAUrC,KAA5B,EAAmCG,GAAGkC,MAAH,CAAUpC,MAA7C;AACH;;;gCAGD;AACI,gBAAIE,KAAK,KAAKA,EAAd;AACAA,eAAGS,WAAH,CAAeT,GAAGU,UAAlB,EAA8B,IAA9B;AACAV,eAAGsB,gBAAH,CAAoBtB,GAAGuB,YAAvB,EAAqC,IAArC;AACAvB,eAAGI,eAAH,CAAmBJ,GAAGK,WAAtB,EAAmC,IAAnC;AACH;;;;;;kBAjEgBT,W","file":"FrameBuffer.js","sourcesContent":["export default class FrameBuffer\n{\n    constructor(width = 512, height = 512, texture)\n    {\n\n        this.gl = POLY.gl;\n        let gl = this.gl;\n\n        this.width = width;\n        this.height = height;\n\n        /*\n         CREATE FRAME BUFFER AND SET UP ALL OF ITS MEMORY\n        */\n\n        // create frame buffer and bind it\n        this.framebuffer = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n        // create an empty texture which can store the colour values\n        this.texture = gl.createTexture();\n        this.gltexture = new POLY.Texture(this.texture, true);\n\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        // create a renderbuffer (buffer associated to a frame buffer object), this one for the depth!\n        var renderBufferDepth = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderBufferDepth);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height);\n\n        // attach everything to the current frame buffer\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBufferDepth);\n\n\n        this.clean();\n    }\n\n    bind(w, h)\n    {\n        this.width = w || this.width;\n        this.height = h || this.height;\n\n        let gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        gl.viewport(0, 0, this.width, this.height);\n    }\n\n    unbind()\n    {\n        let gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n\n    clean()\n    {\n        let gl = this.gl;\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n}\n"]}