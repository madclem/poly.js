{"version":3,"sources":["../../src/poly/FrameBuffer.js"],"names":["FrameBuffer","width","height","texture","gl","POLY","textures","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","createTexture","gltexture","Texture","push","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","texImage2D","RGBA","UNSIGNED_BYTE","renderBufferDepth","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","clean","w","h","viewport","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","_texture","canvas","bind"],"mappings":"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","file":"FrameBuffer.js","sourcesContent":["export default class FrameBuffer\n{\n    constructor(width = 512, height = 512, texture)\n    {\n\n        this.gl = POLY.gl;\n        let gl = this.gl;\n\n        this.width = width;\n        this.height = height;\n\n        /*\n         CREATE FRAME BUFFER AND SET UP ALL OF ITS MEMORY\n        */\n\n        this.textures = [];\n        // create frame buffer and bind it\n        this.framebuffer = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n        // create an empty texture which can store the colour values\n        this.texture = gl.createTexture();\n        this.gltexture = new POLY.Texture(this.texture, true);\n        this.textures.push(this.gltexture);\n\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        // create a renderbuffer (buffer associated to a frame buffer object), this one for the depth!\n        var renderBufferDepth = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderBufferDepth);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height);\n\n        // attach everything to the current frame buffer\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBufferDepth);\n\n\n        this.clean();\n    }\n\n    bind(w, h)\n    {\n        this.width = w || this.width;\n        this.height = h || this.height;\n\n        let gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        gl.viewport(0, 0, this.width, this.height);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    }\n\n    unbind()\n    {\n        let gl = this.gl;\n\n        gl.bindTexture(gl.TEXTURE_2D, this.gltexture._texture);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n\n    clean()\n    {\n        let gl = this.gl;\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    clear()\n    {\n        this.bind();\n\t    this.gl.clear(0,0,0,0);\n\t\t// this.unbind();\n    }\n}\n"]}