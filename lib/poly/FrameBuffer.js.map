{"version":3,"sources":["../../src/poly/FrameBuffer.js"],"names":["FrameBuffer","width","height","texture","gl","POLY","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","texImage2D","RGBA","UNSIGNED_BYTE","renderBufferDepth","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","clean","w","h","frameBuffer","viewport","canvas"],"mappings":";;;;;;;;;;IAAqBA,W;AAEjB,2BACA;AAAA,YADYC,KACZ,uEADoB,GACpB;AAAA,YADyBC,MACzB,uEADkC,GAClC;AAAA,YADuCC,OACvC;;AAAA;;AAEI,aAAKC,EAAL,GAAUC,KAAKD,EAAf;AACA,YAAIA,KAAK,KAAKA,EAAd;;AAEA,aAAKH,KAAL,GAAaA,KAAb;AACA,aAAKC,MAAL,GAAcA,MAAd;;AAEA;;;;AAIA;AACA,aAAKI,WAAL,GAAmBF,GAAGG,iBAAH,EAAnB;AACAH,WAAGI,eAAH,CAAmBJ,GAAGK,WAAtB,EAAmC,KAAKH,WAAxC;;AAEA;AACA,aAAKH,OAAL,GAAeC,GAAGM,aAAH,EAAf;AACAN,WAAGO,WAAH,CAAeP,GAAGQ,UAAlB,EAA8B,KAAKT,OAAnC;AACAC,WAAGS,aAAH,CAAiBT,GAAGQ,UAApB,EAAgCR,GAAGU,kBAAnC,EAAuDV,GAAGW,MAA1D;AACAX,WAAGS,aAAH,CAAiBT,GAAGQ,UAApB,EAAgCR,GAAGY,kBAAnC,EAAuDZ,GAAGa,qBAA1D;AACAb,WAAGc,cAAH,CAAkBd,GAAGQ,UAArB;AACAR,WAAGe,UAAH,CAAcf,GAAGQ,UAAjB,EAA6B,CAA7B,EAAgCR,GAAGgB,IAAnC,EAAyC,KAAKnB,KAA9C,EAAqD,KAAKC,MAA1D,EAAkE,CAAlE,EAAqEE,GAAGgB,IAAxE,EAA8EhB,GAAGiB,aAAjF,EAAgG,IAAhG;;AAEA;AACA,YAAIC,oBAAoBlB,GAAGmB,kBAAH,EAAxB;AACAnB,WAAGoB,gBAAH,CAAoBpB,GAAGqB,YAAvB,EAAqCH,iBAArC;AACAlB,WAAGsB,mBAAH,CAAuBtB,GAAGqB,YAA1B,EAAwCrB,GAAGuB,iBAA3C,EAA8D,KAAK1B,KAAnE,EAA0E,KAAKC,MAA/E;;AAEA;AACAE,WAAGwB,oBAAH,CAAwBxB,GAAGK,WAA3B,EAAwCL,GAAGyB,iBAA3C,EAA8DzB,GAAGQ,UAAjE,EAA6E,KAAKT,OAAlF,EAA2F,CAA3F;AACAC,WAAG0B,uBAAH,CAA2B1B,GAAGK,WAA9B,EAA2CL,GAAG2B,gBAA9C,EAAgE3B,GAAGqB,YAAnE,EAAiFH,iBAAjF;;AAGA,aAAKU,KAAL;AACH;;;;6BAEIC,C,EAAGC,C,EACR;AACI,iBAAKjC,KAAL,GAAagC,KAAK,KAAKhC,KAAvB;AACA,iBAAKC,MAAL,GAAcgC,KAAK,KAAKhC,MAAxB;;AAEA,gBAAIE,KAAK,KAAKA,EAAd;AACAA,eAAGI,eAAH,CAAmBJ,GAAGK,WAAtB,EAAmC,KAAK0B,WAAxC;AACA/B,eAAGgC,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAKnC,KAAvB,EAA8B,KAAKC,MAAnC;AACH;;;iCAGD;AACI,gBAAIE,KAAK,KAAKA,EAAd;AACAA,eAAGI,eAAH,CAAmBJ,GAAGK,WAAtB,EAAmC,IAAnC;AACAL,eAAGgC,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkBhC,GAAGiC,MAAH,CAAUpC,KAA5B,EAAmCG,GAAGiC,MAAH,CAAUnC,MAA7C;AACH;;;gCAGD;AACIE,eAAGO,WAAH,CAAeP,GAAGQ,UAAlB,EAA8B,IAA9B;AACAR,eAAGoB,gBAAH,CAAoBpB,GAAGqB,YAAvB,EAAqC,IAArC;AACArB,eAAGI,eAAH,CAAmBJ,GAAGK,WAAtB,EAAmC,IAAnC;AACH;;;;;;kBA9DgBT,W","file":"FrameBuffer.js","sourcesContent":["export default class FrameBuffer\n{\n    constructor(width = 512, height = 512, texture)\n    {\n\n        this.gl = POLY.gl;\n        let gl = this.gl;\n\n        this.width = width;\n        this.height = height;\n\n        /*\n         CREATE FRAME BUFFER AND SET UP ALL OF ITS MEMORY\n        */\n\n        // create frame buffer and bind it\n        this.framebuffer = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n        // create an empty texture which can store the colour values\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.width, this.height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        // create a renderbuffer (buffer associated to a frame buffer object), this one for the depth!\n        var renderBufferDepth = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderBufferDepth);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height);\n\n        // attach everything to the current frame buffer\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderBufferDepth);\n\n\n        this.clean();\n    }\n\n    bind(w, h)\n    {\n        this.width = w || this.width;\n        this.height = h || this.height;\n\n        let gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);\n        gl.viewport(0, 0, this.width, this.height);\n    }\n\n    unbind()\n    {\n        let gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    }\n\n    clean()\n    {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n}\n"]}