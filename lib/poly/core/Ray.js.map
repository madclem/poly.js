{"version":3,"sources":["../../../src/poly/core/Ray.js"],"names":["a","create","b","c","target","edge1","edge2","normal","diff","Ray","origin","direction","clone","t","copy","scale","add","mTarget","sub","normalize","mPoint","result","directionDistance","dot","Math","sqrt","distanceSqToPoint","v1","squaredDistance","mCenter","mRadius","distanceToPoint","tca","d2","radius2","thc","t0","t1","at","mPlaneCenter","mNormal","denominator","mPA","mPB","mPC","backfaceCulling","cross","DdN","sign","DdQxE2","DdE1xQ","Qdn"],"mappings":"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","file":"Ray.js","sourcesContent":["// Ray.js (https://github.com/yiwenl/Alfrid/blob/master/src/alfrid/math/Ray.js)\n\nimport { vec3, mat4, quat } from 'gl-matrix';\n\n// const mat4 = glm.mat4;\n// const vec3 = glm.vec3;\n\nconst a = vec3.create();\nconst b = vec3.create();\nconst c = vec3.create();\nconst target = vec3.create();\nconst edge1 = vec3.create();\nconst edge2 = vec3.create();\nconst normal = vec3.create();\nconst diff = vec3.create();\n\nclass Ray {\n\tconstructor(origin, direction) {\n\t\tthis.origin = origin ? vec3.clone(origin) : vec3.create();\n\t\tthis.direction = direction ? vec3.clone(direction) : vec3.create();\n\t}\n\n\tat(t) {\n\t\tvec3.copy(target, this.direction);\n\t\tvec3.scale(target, target, t);\n\t\tvec3.add(target, target, this.origin);\n\n\t\treturn target;\n\t}\n\n\n\tlookAt(mTarget) {\n\t\tvec3.sub(this.direction, mTarget, this.origin);\n\t\tvec3.normalize(this.origin, this.origin);\n\t}\n\n\tclosestPointToPoint(mPoint) {\n\t\tconst result = vec3.create();\n\t\tvec3.sub(mPoint, this.origin);\n\t\tconst directionDistance = vec3.dot(result, this.direction);\n\n\t\tif (directionDistance < 0) {\n\t\t\treturn vec3.clone(this.origin);\n\t\t}\n\n\t\tvec3.copy(result, this.direction);\n\t\tvec3.scale(result, result, directionDistance);\n\t\tvec3.add(result, result, this.origin);\n\n\t\treturn result;\n\t}\n\n\n\tdistanceToPoint(mPoint) {\n\t\treturn Math.sqrt(this.distanceSqToPoint(mPoint));\n\t}\n\n\n\tdistanceSqToPoint(mPoint) {\n\t\tconst v1 = vec3.create();\n\n\t\tvec3.sub(v1, mPoint, this.origin);\n\t\tconst directionDistance = vec3.dot(v1, this.direction);\n\n\t\tif (directionDistance < 0) {\n\t\t\treturn vec3.squaredDistance(this.origin, mPoint);\n\t\t}\n\n\t\tvec3.copy(v1, this.direction);\n\t\tvec3.scale(v1, v1, directionDistance);\n\t\tvec3.add(v1, v1, this.origin);\n\t\treturn vec3.squaredDistance(v1, mPoint);\n\t}\n\n\n\tintersectsSphere(mCenter, mRadius) {\n\t\treturn this.distanceToPoint(mCenter) <= mRadius;\n\t}\n\n\n\tintersectSphere(mCenter, mRadius) {\n\t\tconst v1 = vec3.create();\n\t\tvec3.sub(v1, mCenter, this.origin);\n\t\tconst tca = vec3.dot(v1, this.direction);\n\t\tconst d2 = vec3.dot(v1, v1) - tca * tca;\n\t\tconst radius2 = mRadius * mRadius;\n\n\t\tif(d2 > radius2) return null;\n\n\t\tconst thc = Math.sqrt(radius2 - d2);\n\n\t\tconst t0 = tca - thc;\n\n\t\tconst t1 = tca + thc;\n\n\t\tif(t0 < 0 && t1 < 0) return null;\n\n\t\tif(t0 < 0) return this.at(t1);\n\n\t\treturn this.at(t0);\n\t}\n\n\n\tdistanceToPlane(mPlaneCenter, mNormal) {\n\t\tconst denominator = vec3.dot(mNormal, this.direction);\n\n\t\tif(denominator === 0) {\n\t\t}\n\t}\n\n\n\tintersectTriangle(mPA, mPB, mPC, backfaceCulling = true) {\n\t\tvec3.copy(a, mPA);\n\t\tvec3.copy(b, mPB);\n\t\tvec3.copy(c, mPC);\n\n\t\t// const edge1 = vec3.create();\n\t\t// const edge2 = vec3.create();\n\t\t// const normal = vec3.create();\n\t\t// const diff = vec3.create();\n\n\t\tvec3.sub(edge1, b, a);\n\t\tvec3.sub(edge2, c, a);\n\t\tvec3.cross(normal, edge1, edge2);\n\n\t\tlet DdN = vec3.dot(this.direction, normal);\n\t\tlet sign;\n\n\t\tif (DdN > 0) {\n\t\t\tif (backfaceCulling) {\treturn null;\t}\n\t\t\tsign = 1;\n\t\t} else if (DdN < 0) {\n\t\t\tsign = -1;\n\t\t\tDdN = - DdN;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\n\t\tvec3.sub(diff, this.origin, a);\n\n\t\tvec3.cross(edge2, diff, edge2);\n\t\tconst DdQxE2 = sign * vec3.dot(this.direction, edge2);\n\t\tif (DdQxE2 < 0) { \treturn null; \t}\n\n\t\tvec3.cross(edge1, edge1, diff);\n\t\tconst DdE1xQ = sign * vec3.dot(this.direction, edge1);\n\t\tif (DdE1xQ < 0) {\treturn null;\t}\n\n\t\tif(DdQxE2 + DdE1xQ > DdN) {\treturn null;\t}\n\n\t\tconst Qdn = - sign * vec3.dot(diff, normal);\n\t\tif(Qdn < 0) {\treturn null;\t}\n\n\t\treturn this.at(Qdn / DdN);\n\t}\n\n}\n\nexport default Ray;\n"]}