{"version":3,"sources":["../../../src/poly/geometry/Mesh.js"],"names":["Mesh","program","state","drawType","uvs","normals","gl","depthTest","instanceCount","_attributes","_vertices","_indices","matrix","create","_vertexSize","_numItems","indexBuffer","indices","dynamic","DYNAMIC_DRAW","STATIC_DRAW","createBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","data","name","itemSize","length","addAttribute","instance","buffer","ARRAY_BUFFER","Float32Array","push","numItems","addAttributeLocation","i","attr"],"mappings":"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","file":"Mesh.js","sourcesContent":["import State from '../State';\r\nimport Object3D from './Object3D';\r\nimport { mat4 } from 'gl-matrix';\r\n\r\nexport default class Mesh extends Object3D\r\n{\r\n\tconstructor(program , state, drawType = 4)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tthis.uvs = [];\r\n\t\tthis.normals = [];\r\n\r\n\t\tthis.program = program;\r\n\t\tthis.state = state || new State(this.program.gl);\r\n\r\n\t\tif(!state)\r\n\t\t{\r\n\t\t\tthis.state.depthTest = true;\r\n\t\t}\r\n\r\n\t\tthis.instanceCount = 0;\r\n\t\tthis.drawType = drawType;\r\n\t\tthis._attributes = [];\r\n\t\tthis._vertices = [];\r\n\t\tthis._indices = [];\r\n\t\tthis.matrix = mat4.create();\r\n\t\tthis._vertexSize = 0;\r\n\t\tthis._numItems = 0;\r\n\t\tthis.indexBuffer = null;\r\n\t}\r\n\r\n\taddIndices(indices, dynamic)\r\n\t{\r\n\t\tlet gl = this.program.gl;\r\n\t\tconst drawType = dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\t\tthis._indices = indices;\r\n\r\n\t\tthis.indexBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), drawType);\r\n\r\n\t\t}\r\n\r\n\taddPosition(data, name = 'aPosition', itemSize = 3)\r\n\t{\r\n\t\tthis._vertices = data;\r\n\t\tthis._vertexSize = this._vertices.length;\r\n\t\tthis._numItems = this._vertexSize/itemSize;\r\n\t\tthis.addAttribute(data, name, itemSize);\r\n\t}\r\n\r\n\taddAttribute(data, name, itemSize = 3, instance)\r\n\t{\r\n\t\tlet gl = this.program.gl;\r\n\t\tlet buffer = gl.createBuffer();\r\n    \tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    \tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);\r\n\r\n\t\t// console.log('data', data);\r\n   \t\tthis._attributes.push({\r\n   \t\t\tname,\r\n   \t\t\tdata,\r\n   \t\t\titemSize,\r\n   \t\t\tnumItems: this._numItems,\r\n   \t\t\tbuffer,\r\n\t\t\tinstance\r\n   \t\t});\r\n\r\n   \t\tthis.program.addAttributeLocation(name);\r\n\t}\r\n\r\n\tupdateAttribute(name, data)\r\n\t{\t\r\n\t\tlet gl = this.program.gl;\r\n\t\tfor (var i = 0; i < this._attributes.length; i++) \r\n\t\t{\r\n\t\t\tlet attr = this._attributes[i];\r\n\t\t\tif(attr.name === name)\r\n\t\t\t{\r\n\t\t\t\tlet buffer =attr.buffer;\r\n    \t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    \t\t\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(data), gl.STATIC_DRAW);\r\n    \t\t\tattr.data = data;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}