{"version":3,"sources":["../../../../src/poly/geometry/mesh/Line.js"],"names":["tempArray1","tempArray2","Line","program","points","state","drawType","length","positions","directions","indicesArray","counters","width","uvs","previous","next","line","needsUpdate","v","index","indexC","indexP","indexN","i","c","process","a","b","aa","ab","out","l","compareV3","copyV3","addPosition","addAttribute","w","j","widthCallback","push","n","addIndices"],"mappings":"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","file":"Line.js","sourcesContent":["import Mesh from '../Mesh';\r\n\r\nlet tempArray1 = [];\r\nlet tempArray2 = [];\r\n\r\nexport default class Line extends Mesh\r\n{\r\n    constructor(program, points = [], state, drawType= 4)\r\n    {\r\n        super(program, state, drawType)\r\n\r\n        // data = data || {};\r\n\r\n        if(points.length <= 0)\r\n        {\r\n            points = [\r\n                [0, 0, 0],\r\n                [100/200, 250/200, 0],\r\n                [50/200, 200/200 ,0],\r\n                [0, 200/200 ,0],\r\n                [-100/200, 220/200 ,0],\r\n                [-70/200, 300/200 ,0]\r\n            ]\r\n        }\r\n\r\n\r\n        this.positions = [];\r\n        this.directions = [];\r\n        this.indicesArray = [];\r\n        this.counters = [];\r\n        this.width = [];\r\n        this.uvs = [];\r\n        this.previous = [];\r\n        this.next = [];\r\n\r\n\r\n        this.points = points;\r\n\r\n        this.line();\r\n    }\r\n\r\n    line(needsUpdate = true)\r\n    {\r\n        let v = this.points;\r\n\r\n        this.positions.length = v.length * 2;\r\n        this.counters.length = v.length * 2;\r\n\r\n        let index = 0;\r\n        let indexC = 0;\r\n        let indexP = 0;\r\n        let indexN = 0;\r\n\r\n\r\n\r\n        this.previous.length = this.positions.length;\r\n        this.next.length = this.positions.length;\r\n\r\n        for (let i = 0; i < v.length; i++) {\r\n\r\n\r\n            if(needsUpdate)\r\n            {\r\n                let c = i/v.length;\r\n                this.counters[indexC++] = [c];\r\n                this.counters[indexC++] = [c];\r\n            }\r\n\r\n            this.positions[index++] = v[i][0];\r\n            this.positions[index++] = v[i][1];\r\n            this.positions[index++] = v[i][2];\r\n\r\n            this.positions[index++] = v[i][0];\r\n            this.positions[index++] = v[i][1];\r\n            this.positions[index++] = v[i][2];\r\n        }\r\n\r\n        this.process(needsUpdate);\r\n    }\r\n\r\n    compareV3( a, b )\r\n    {\r\n  \t    let aa = a * 6;\r\n  \t    let ab = b * 6;\r\n\r\n  \t    return ( this.positions[ aa ] === this.positions[ ab ] ) && ( this.positions[ aa + 1 ] === this.positions[ ab + 1 ] ) && ( this.positions[ aa + 2 ] === this.positions[ ab + 2 ] );\r\n    }\r\n\r\n    copyV3( a, out )\r\n    {\r\n        if(!out) out = tempArray1;\r\n        let aa = a * 6;\r\n        out[0] = this.positions[ aa ];\r\n        out[1] = this.positions[ aa + 1 ];\r\n        out[2] = this.positions[ aa + 2 ];\r\n    }\r\n\r\n    process(needsUpdate)\r\n    {\r\n        let l = this.positions.length / 6;\r\n        let v, index = 0, indexN = 0;\r\n        if( this.compareV3( 0, l - 1 ) )\r\n        {\r\n            this.copyV3( l - 2 );\r\n        }\r\n        else\r\n        {\r\n            this.copyV3( 0 );\r\n        }\r\n\r\n        this.previous[index++] = tempArray1[0];\r\n        this.previous[index++] = tempArray1[1];\r\n        this.previous[index++] = tempArray1[2];\r\n\r\n        this.previous[index++] = tempArray1[0];\r\n        this.previous[index++] = tempArray1[1];\r\n        this.previous[index++] = tempArray1[2];\r\n\r\n        for (let i = 0; i < l; i++) {\r\n          // caluclate pos and next\r\n          this.copyV3( i, tempArray1 );\r\n\r\n          if(i > 0) {\r\n            // we can fill the nexts\r\n            this.next[indexN++] = tempArray1[0];\r\n            this.next[indexN++] = tempArray1[1];\r\n            this.next[indexN++] = tempArray1[2];\r\n\r\n            this.next[indexN++] = tempArray1[0];\r\n            this.next[indexN++] = tempArray1[1];\r\n            this.next[indexN++] = tempArray1[2];\r\n\r\n            this.previous[index++] = tempArray2[0];\r\n            this.previous[index++] = tempArray2[1];\r\n            this.previous[index++] = tempArray2[2];\r\n\r\n            this.previous[index++] = tempArray2[0];\r\n            this.previous[index++] = tempArray2[1];\r\n            this.previous[index++] = tempArray2[2];\r\n          }\r\n\r\n          tempArray2[0] = tempArray1[0];\r\n          tempArray2[1] = tempArray1[1];\r\n          tempArray2[2] = tempArray1[2];\r\n        }\r\n\r\n        if( this.compareV3( l - 1, 0 ) )\r\n        {\r\n            this.copyV3( 1, tempArray1 );\r\n        }\r\n        else\r\n        {\r\n            this.copyV3( l - 1, tempArray1 );\r\n        }\r\n\r\n        this.next[indexN++] = tempArray1[0];\r\n        this.next[indexN++] = tempArray1[1];\r\n        this.next[indexN++] = tempArray1[2];\r\n\r\n        this.next[indexN++] = tempArray1[0];\r\n        this.next[indexN++] = tempArray1[1];\r\n        this.next[indexN++] = tempArray1[2];\r\n\r\n        index = 0;\r\n        this.addPosition(this.positions, 'position');\r\n        this.addAttribute(this.next, 'aNext');\r\n        this.addAttribute(this.previous, 'aPrevious');\r\n\r\n        if(needsUpdate)\r\n        {\r\n            index = 0;\r\n            this.uvs = [];\r\n            let w;\r\n\r\n            for( let j = 0; j < l; j++ )\r\n            {\r\n                if( this.widthCallback )\r\n                {\r\n                  w = this.widthCallback( j / ( l -1 ) )\r\n                }\r\n                else\r\n                {\r\n                  w = .1;\r\n                }\r\n\r\n                this.width[index++] = w;\r\n                this.width[index++] = w;\r\n\r\n                this.uvs.push(j/(l-1), 0);\r\n                this.uvs.push(j/(l-1), 1);\r\n            }\r\n\r\n            index = 0;\r\n            this.indicesArray = [];\r\n\r\n            for( let j = 0; j < l - 1; j++ )\r\n            {\r\n                let n = j * 2;\r\n\r\n                this.indicesArray[index++] = n;\r\n                this.indicesArray[index++] = n+1;\r\n                this.indicesArray[index++] = n+2;\r\n\r\n                this.indicesArray[index++] = n+2;\r\n                this.indicesArray[index++] = n+1;\r\n                this.indicesArray[index++] = n+3;\r\n            }\r\n\r\n            index = 0;\r\n            this.directions = [];\r\n\r\n            for (let i = 0; i < this.positions.length; i++)\r\n            {\r\n                if(i % 2 === 0)\r\n                {\r\n                    this.directions[index++] = 1;\r\n                }\r\n                else\r\n                {\r\n                    this.directions[index++] = -1;\r\n                }\r\n            }\r\n\r\n            this.addIndices(this.indicesArray, false);\r\n            // this.addAttribute(this.width, 'width');\r\n            this.addAttribute(this.directions, 'direction', 1);\r\n            this.addAttribute(this.uvs, 'aUv', 2);\r\n            this.addAttribute(this.counters, 'aCounters', 1);\r\n        }\r\n    }\r\n\r\n    update(points, needsUpdate = false)\r\n    {\r\n        this.points = points || this.points;\r\n        this.line(needsUpdate);\r\n    }\r\n}\r\n"]}