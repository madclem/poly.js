{"version":3,"sources":["../../../src/poly/loaders/OBJLoader.js"],"names":["ObjLoader","url","callback","drawType","_drawType","parseObj","_req","response","objStr","lines","split","positions","coords","finalNormals","vertices","normals","uvs","indices","count","result","vertexPattern","normalPattern","uvPattern","facePattern1","facePattern2","facePattern3","facePattern4","parseVertexIndex","value","index","parseInt","length","parseNormalIndex","parseUVIndex","addVertex","a","b","c","push","addUV","addNormal","addFace","d","ua","ub","uc","ud","na","nb","nc","nd","ia","ib","ic","id","undefined","i","line","trim","charAt","exec","parseFloat","_generateMeshes","o","maxNumVertices","hasNormals","hasUVs","mesh","meshes","lastIndex","oCopy","concat","sliceNum","Math","min","splice","tmpIndex","console","log","_callback","parse","loader"],"mappings":"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","file":"OBJLoader.js","sourcesContent":["// ObjLoader.js\n\n'use strict';\n\nimport BinaryLoader from './BinaryLoader';\n// import Mesh from '../Mesh';\n\nclass ObjLoader extends BinaryLoader {\n\n\tload(url, callback, drawType = 4)\n    {\n\t\tthis._drawType = drawType;\n\t\tsuper.load(url, callback);\n\t}\n\n\t_onLoaded() {\n\t\tthis.parseObj(this._req.response);\n\t}\n\n\tparseObj(objStr) {\n\t\tconst lines = objStr.split('\\n');\n\n\t\tconst positions    = [];\n\t\tconst coords       = [];\n\t\tconst finalNormals = [];\n\t\tconst vertices     = [];\n\t\tconst normals      = [];\n\t\tconst uvs          = [];\n\t\tconst indices      = [];\n\t\tlet count        = 0;\n\t\tlet result;\n\n\t\t// v float float float\n\t\tconst vertexPattern = /v( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)/;\n\n\t\t// vn float float float\n\t\tconst normalPattern = /vn( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)/;\n\n\t\t// vt float float\n\t\tconst uvPattern = /vt( +[\\d|\\.|\\+|\\-|e|E]+)( +[\\d|\\.|\\+|\\-|e|E]+)/;\n\n\t\t// f vertex vertex vertex ...\n\t\tconst facePattern1 = /f( +-?\\d+)( +-?\\d+)( +-?\\d+)( +-?\\d+)?/;\n\n\t\t// f vertex/uv vertex/uv vertex/uv ...\n\t\tconst facePattern2 = /f( +(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+))?/;\n\n\t\t// f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...\n\t\tconst facePattern3 = /f( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))( +(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))?/;\n\n\t\t// f vertex//normal vertex//normal vertex//normal ...\n\t\tconst facePattern4 = /f( +(-?\\d+)\\/\\/(-?\\d+))( +(-?\\d+)\\/\\/(-?\\d+))( +(-?\\d+)\\/\\/(-?\\d+))( +(-?\\d+)\\/\\/(-?\\d+))?/;\n\n\n\t\tfunction parseVertexIndex(value) {\n\t\t\tconst index = parseInt(value);\n\t\t\treturn (index >= 0 ? index - 1 : index + vertices.length / 3) * 3;\n\t\t}\n\n\t\tfunction parseNormalIndex(value) {\n\t\t\tconst index = parseInt(value);\n\t\t\treturn (index >= 0 ? index - 1 : index + normals.length / 3) * 3;\n\t\t}\n\n\t\tfunction parseUVIndex(value) {\n\t\t\tconst index = parseInt(value);\n\t\t\treturn (index >= 0 ? index - 1 : index + uvs.length / 2) * 2;\n\t\t}\n\n\n\t\tfunction addVertex(a, b, c) {\n\t\t\tpositions.push(vertices[a], vertices[a + 1], vertices[a + 2]);\n\t\t\tpositions.push(vertices[b], vertices[b + 1], vertices[b + 2]);\n\t\t\tpositions.push(vertices[c], vertices[c + 1], vertices[c + 2]);\n\n\t\t\tindices.push(count * 3 + 0);\n\t\t\tindices.push(count * 3 + 1);\n\t\t\tindices.push(count * 3 + 2);\n\n\t\t\tcount ++;\n\t\t}\n\n\n\t\tfunction addUV(a, b, c) {\n\t\t\tcoords.push(uvs[a], uvs[a + 1]);\n\t\t\tcoords.push(uvs[b], uvs[b + 1]);\n\t\t\tcoords.push(uvs[c], uvs[c + 1]);\n\t\t}\n\n\n\t\tfunction addNormal(a, b, c) {\n\t\t\tfinalNormals.push(normals[a], normals[a + 1], normals[a + 2]);\n\t\t\tfinalNormals.push(normals[b], normals[b + 1], normals[b + 2]);\n\t\t\tfinalNormals.push(normals[c], normals[c + 1], normals[c + 2]);\n\t\t}\n\n\t\tfunction addFace(a, b, c, d,  ua, ub, uc, ud,  na, nb, nc, nd) {\n\t\t\tlet ia = parseVertexIndex(a);\n\t\t\tlet ib = parseVertexIndex(b);\n\t\t\tlet ic = parseVertexIndex(c);\n\t\t\tlet id;\n\n\t\t\tif (d === undefined) {\n\n\t\t\t\taddVertex(ia, ib, ic);\n\n\t\t\t} else {\n\n\t\t\t\tid = parseVertexIndex(d);\n\n\t\t\t\taddVertex(ia, ib, id);\n\t\t\t\taddVertex(ib, ic, id);\n\n\t\t\t}\n\n\n\t\t\tif (ua !== undefined) {\n\n\t\t\t\tia = parseUVIndex(ua);\n\t\t\t\tib = parseUVIndex(ub);\n\t\t\t\tic = parseUVIndex(uc);\n\n\t\t\t\tif (d === undefined) {\n\n\t\t\t\t\taddUV(ia, ib, ic);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tid = parseUVIndex(ud);\n\n\t\t\t\t\taddUV(ia, ib, id);\n\t\t\t\t\taddUV(ib, ic, id);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (na !== undefined) {\n\n\t\t\t\tia = parseNormalIndex(na);\n\t\t\t\tib = parseNormalIndex(nb);\n\t\t\t\tic = parseNormalIndex(nc);\n\n\t\t\t\tif (d === undefined) {\n\n\t\t\t\t\taddNormal(ia, ib, ic);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tid = parseNormalIndex(nd);\n\n\t\t\t\t\taddNormal(ia, ib, id);\n\t\t\t\t\taddNormal(ib, ic, id);\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\n\t\tfor (let i = 0; i < lines.length; i ++) {\n\t\t\tlet line = lines[i];\n\t\t\tline = line.trim();\n\n\t\t\tif (line.length === 0 || line.charAt(0) === '#') {\n\n\t\t\t\tcontinue;\n\n\t\t\t} else if ((result = vertexPattern.exec(line)) !== null) {\n\n\t\t\t\tvertices.push(\n\t\t\t\t\tparseFloat(result[1]),\n\t\t\t\t\tparseFloat(result[2]),\n\t\t\t\t\tparseFloat(result[3])\n\t\t\t\t);\n\n\t\t\t} else if ((result = normalPattern.exec(line)) !== null) {\n\n\t\t\t\tnormals.push(\n\t\t\t\t\tparseFloat(result[1]),\n\t\t\t\t\tparseFloat(result[2]),\n\t\t\t\t\tparseFloat(result[3])\n\t\t\t\t);\n\n\t\t\t} else if ((result = uvPattern.exec(line)) !== null) {\n\n\t\t\t\tuvs.push(\n\t\t\t\t\tparseFloat(result[1]),\n\t\t\t\t\tparseFloat(result[2])\n\t\t\t\t);\n\n\t\t\t} else if ((result = facePattern1.exec(line)) !== null) {\n\n\t\t\t\taddFace(\n\t\t\t\t\tresult[1], result[2], result[3], result[4]\n\t\t\t\t);\n\n\t\t\t} else if ((result = facePattern2.exec(line)) !== null) {\n\n\t\t\t\taddFace(\n\t\t\t\t\tresult[2], result[5], result[8], result[11],\n\t\t\t\t\tresult[3], result[6], result[9], result[12]\n\t\t\t\t);\n\n\t\t\t} else if ((result = facePattern3.exec(line)) !== null) {\n\t\t\t\taddFace(\n\t\t\t\t\tresult[2], result[6], result[10], result[14],\n\t\t\t\t\tresult[3], result[7], result[11], result[15],\n\t\t\t\t\tresult[4], result[8], result[12], result[16]\n\t\t\t\t);\n\n\t\t\t} else if ((result = facePattern4.exec(line)) !== null) {\n\t\t\t\taddFace(\n\t\t\t\t\tresult[2], result[5], result[8], result[11],\n\t\t\t\t\tundefined, undefined, undefined, undefined,\n\t\t\t\t\tresult[3], result[6], result[9], result[12]\n\t\t\t\t);\n\n\t\t\t}\n\t\t}\n\n\t\treturn this._generateMeshes({\n\t\t\tpositions:positions,\n\t\t\tcoords:coords,\n\t\t\tnormals:finalNormals,\n\t\t\tindices:indices\n\t\t});\n\n\t}\n\n\t_generateMeshes(o) {\n\t\tconst maxNumVertices = 65535;\n\t\tconst hasNormals = o.normals.length > 0;\n\t\tconst hasUVs = o.coords.length > 0;\n\t\tlet mesh;\n\n\t\tif(o.positions.length > maxNumVertices) {\n\t\t\tconst meshes = [];\n\t\t\tlet lastIndex = 0;\n\n\t\t\tconst oCopy       = {};\n\t\t\toCopy.positions = o.positions.concat();\n\t\t\toCopy.coords    = o.coords.concat();\n\t\t\toCopy.indices   = o.indices.concat();\n\t\t\toCopy.normals   = o.normals.concat();\n\n\t\t\twhile(o.indices.length > 0) {\n\n\t\t\t\tconst sliceNum  = Math.min(maxNumVertices, o.positions.length);\n\t\t\t\tconst indices   = o.indices.splice(0, sliceNum);\n\t\t\t\tconst positions = [];\n\t\t\t\tconst coords    = [];\n\t\t\t\tconst normals   = [];\n\t\t\t\tlet index, tmpIndex = 0;\n\n\t\t\t\tfor(let i = 0; i < indices.length; i++) {\n\t\t\t\t\tif(indices[i] > tmpIndex) {\n\t\t\t\t\t\ttmpIndex = indices[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tindex = indices[i];\n\n\t\t\t\t\tpositions.push(oCopy.positions[index]);\n\t\t\t\t\tif(hasUVs) {\n\t\t\t\t\t\tcoords.push(oCopy.coords[index]);\n\t\t\t\t\t}\n\t\t\t\t\tif(hasNormals) {\n\t\t\t\t\t\tnormals.push(oCopy.normals[index]);\n\t\t\t\t\t}\n\n\t\t\t\t\tindices[i] -= lastIndex;\n\t\t\t\t}\n\n\t\t\t\tlastIndex = tmpIndex + 1;\n\n                console.log('here1', indices, positions);\n\t\t\t\t// mesh = new Mesh(this._drawType);\n\t\t\t\t// mesh.bufferVertex(positions);\n\t\t\t\t// if(hasUVs) {\n\t\t\t\t// \tmesh.bufferTexCoord(coords);\n\t\t\t\t// }\n                //\n\t\t\t\t// mesh.bufferIndex(indices);\n\t\t\t\t// if(hasNormals) {\n\t\t\t\t// \tmesh.bufferNormal(normals);\n\t\t\t\t// }\n                //\n\t\t\t\t// meshes.push(mesh);\n\t\t\t}\n\n\t\t\tif(this._callback) {\n\t\t\t\tthis._callback(meshes, oCopy);\n\t\t\t}\n\n\t\t\treturn meshes;\n\t\t} else {\n            console.log('here1', o);\n            //\n\t\t\t// mesh = new Mesh(this._drawType);\n\t\t\t// mesh.bufferVertex(o.positions);\n\t\t\t// if(hasUVs) {\n\t\t\t// \tmesh.bufferTexCoord(o.coords);\n\t\t\t// }\n\t\t\t// mesh.bufferIndex(o.indices);\n\t\t\t// if(hasNormals) {\n\t\t\t// \tmesh.bufferNormal(o.normals);\n\t\t\t// }\n\n\t\t\tif(this._callback) {\n\t\t\t\t// this._callback(mesh, o);\n\t\t\t}\n\n\t\t\t// return mesh;\n\t\t}\n\n\t\treturn o;\n\t}\n}\n\n\nObjLoader.parse = function (objStr) {\n\tconst loader = new ObjLoader();\n\treturn loader.parseObj(objStr);\n};\n\nexport default ObjLoader;\n"]}