{"version":3,"sources":["../../src/poly/Program.js"],"names":["Program","vertShader","fragShader","uniforms","gl","POLY","cacheAttributesLocation","cacheUniformsLocation","program","createProgram","vert","_createShader","frag","_attachShaders","linkProgram","getProgramParameter","LINK_STATUS","useProgram","uniform","addUniformLocation","_createGetterSetterUniforms","name","value","getUniformLocation","undefined","_this","Proxy","get","target","console","log","set","uniformMatrix4fv","getAttribLocation","enableVertexAttribArray","addAttributeLocation","getAttributeLocation","attachShader","src","isVertex","shader","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog"],"mappings":"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","file":"Program.js","sourcesContent":["export default class Program\r\n{\r\n    constructor(vertShader, fragShader, uniforms)\r\n    {\r\n        let gl = POLY.gl; // not sure that's great... :p\r\n        this.gl = gl;\r\n            \r\n        // cache the locations of attributes and uniforms\r\n        this.cacheAttributesLocation = {}\r\n        this.cacheUniformsLocation = {}\r\n\r\n        // create the program itself\r\n        this.program = gl.createProgram();\r\n\r\n        let vert = this._createShader(vertShader, true);\r\n        let frag = this._createShader(fragShader, false);\r\n        this._attachShaders(vert, frag);\r\n\r\n        gl.linkProgram(this.program);\r\n\r\n        // check for errors\r\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS))\r\n        {\r\n            throw \"Couldn't initialise program\";\r\n        }\r\n\r\n        gl.useProgram(this.program);\r\n\r\n        for (let uniform in this.uniforms)\r\n        {\r\n            this.addUniformLocation(uniform, this.uniforms[uniform]);\r\n        }\r\n\r\n        this._createGetterSetterUniforms(uniforms);\r\n    }\r\n\r\n    addUniformLocation(name, value)\r\n    {\r\n        this.cacheUniformsLocation[name] = this.gl.getUniformLocation(this.program, name);\r\n    }\r\n\r\n    getUniformLocation(name)\r\n    {\r\n        if(this.cacheUniformsLocation[name] !== undefined)\r\n        {\r\n            return this.cacheUniformsLocation[name];\r\n        }\r\n        else\r\n        {\r\n            this.addUniformLocation(name);\r\n            \r\n            return this.getUniformLocation(name);\r\n        }\r\n    }\r\n\r\n\r\n    // create a this.uniforms property\r\n    // useful for the setter, we can just update the uniform when it gets changed\r\n    _createGetterSetterUniforms(uniforms)\r\n    {   \r\n        let gl = this.gl;\r\n        let program = this.program;\r\n        let _this = this;\r\n\r\n        this.uniforms = new Proxy(uniforms, {\r\n            get: function(target, name) \r\n            {\r\n                if (!(name in target)) \r\n                {\r\n                    console.log(\"Getting non-existant property '\" + name + \"'\");\r\n                    return undefined;\r\n                }\r\n\r\n                return target[name];\r\n            },\r\n            set: function(target, name, value) \r\n            {\r\n                if (!(name in target)) \r\n                {\r\n                    console.log(\"Setting non-existant property '\" + name + \"', initial value: \" + value);\r\n\r\n                    return false;\r\n                }\r\n                target[name] = value;\r\n                gl.uniformMatrix4fv(_this.getUniformLocation(name), false, value);\r\n\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    addAttributeLocation(name)\r\n    {\r\n        this.cacheAttributesLocation[name] = this.gl.getAttribLocation(this.program, name);\r\n        this.gl.enableVertexAttribArray(this.cacheAttributesLocation[name]); // NEVER FORGET THAT LINE (I did...)\r\n    }\r\n\r\n    getAttributeLocation(name)\r\n    {\r\n        if(this.cacheAttributesLocation[name] !== undefined)\r\n        {\r\n            return this.cacheAttributesLocation[name];\r\n        }\r\n        else\r\n        {\r\n            this.addAttributeLocation(name);\r\n\r\n            return this.getAttributeLocation(name);\r\n        }\r\n    }\r\n\r\n    _attachShaders(vert, frag)\r\n    {\r\n        this.gl.attachShader(this.program, vert);\r\n        this.gl.attachShader(this.program, frag);\r\n    }\r\n\r\n    _createShader(src, isVertex)\r\n    {\r\n        let gl = this.gl;\r\n        let shader;\r\n        if (isVertex)\r\n        {\r\n            shader = gl.createShader(gl.VERTEX_SHADER);\r\n        }\r\n        else\r\n        {\r\n            shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n        }\r\n\r\n        this.gl.shaderSource(shader, src);\r\n        this.gl.compileShader(shader);\r\n\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\r\n        {\r\n            throw (\"Couldn't initialise shader, \", gl.getShaderInfoLog(shader));\r\n            return null;\r\n        }\r\n\r\n        return shader;\r\n    }\r\n}\r\n"]}