{"version":3,"sources":["../../src/poly/State.js"],"names":["BLEND","DEPTH_TEST","FRONT_FACE","CULL_FACE","BLEND_FUNC","State","gl","activeState","Uint8Array","defaultState","data","blendMode","blendModes","source","alpha","SRC_ALPHA","dest","one","ONE","state","setBlend","setDepthTest","setFrontFace","setCullFace","setBlendMode","value","blendFunc","frontFace","CULLING"],"mappings":"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","file":"State.js","sourcesContent":["// inspired (copied) by (from) https://github.com/pixijs/pixi.js/blob/dev/src/core/renderers/webgl/WebGLState.js\nconst BLEND = 0;\nconst DEPTH_TEST = 1;\nconst FRONT_FACE = 2;\nconst CULL_FACE = 3;\nconst BLEND_FUNC = 4;\n\nexport default class State\n{\n    constructor(gl)\n    {\n        this.gl = gl;\n        this.activeState = new Uint8Array(16);\n        this.defaultState = new Uint8Array(16);\n\n        this.data = 0;\n        this.blendMode = 0;\n\n        this.blendModes = {\n            source: {\n                alpha: this.gl.SRC_ALPHA\n            },\n            dest: {\n                one: this.gl.ONE\n            },\n        }\n    }\n\n    get blend()\n    {\n        return this.activeState[BLEND];\n    }\n\n    set blend(value) // eslint-disable-line require-jsdoc\n    {\n        this.activeState[BLEND] = value;\n    }\n\n    get culling()\n    {\n        return this.activeState[CULLING];\n    }\n\n    set culling(value) // eslint-disable-line require-jsdoc\n    {\n        this.activeState[CULLING] = value;\n    }\n\n    get depthTest()\n    {\n        return this.activeState[DEPTH_TEST];\n    }\n\n    set depthTest(value) // eslint-disable-line require-jsdoc\n    {\n        this.activeState[DEPTH_TEST] = value;\n    }\n\n    get clockwiseFrontFace()\n    {\n        return this.activeState[FRONT_FACE];\n    }\n\n    set clockwiseFrontFace(value) // eslint-disable-line require-jsdoc\n    {\n        this.activeState[FRONT_FACE] = value;\n    }\n\n    get blendMode()\n    {\n        return this.activeState[BLEND_FUNC];\n        // return this._blendMode;\n    }\n\n    set blendMode(value) // eslint-disable-line require-jsdoc\n    {\n        this.activeState[BLEND_FUNC] = value;\n        // 17 is NO BLEND\n        // this.blend = (value !== 17);\n        // this._blendMode = value;\n    }\n\n    setState(state)\n    {\n        this.setBlend(state.activeState[BLEND]);\n        this.setDepthTest(state.activeState[DEPTH_TEST]);\n        this.setFrontFace(state.activeState[FRONT_FACE]);\n        this.setCullFace(state.activeState[CULL_FACE]);\n        this.setBlendMode(state.activeState[BLEND_FUNC]);\n    }\n\n    setBlend(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[BLEND] === value)\n        {\n            return;\n        }\n\n        this.activeState[BLEND] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.BLEND);\n        // this.setDepthTest(!value); // no need to do that because ew blend before we depth test (right?)\n    }\n\n    setBlendMode(value, source = \"alpha\", dest = \"one\")\n    {\n        if (value === this.activeState[BLEND_FUNC])\n        {\n            return;\n        }\n\n        this.activeState[BLEND_FUNC] = value;\n\n        this.gl.blendFunc(this.blendModes.source[source], this.blendModes.dest[dest]);\n        //\n        // const mode = this.blendModes[value];\n        //\n        // if (mode.length === 2)\n        // {\n        //     this.gl.blendFunc(mode[0], mode[1]);\n        // }\n        // else\n        // {\n        //     this.gl.blendFuncSeparate(mode[0], mode[1], mode[2], mode[3]);\n        // }\n    }\n\n    setDepthTest(value)\n    {\n        value = value ? 1 : 0;\n        if (this.activeState[DEPTH_TEST] === value)\n        {\n            return;\n        }\n\n        this.activeState[DEPTH_TEST] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.DEPTH_TEST);\n    }\n\n    setCullFace(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[CULL_FACE] === value)\n        {\n            return;\n        }\n\n        this.activeState[CULL_FACE] = value;\n        this.gl[value ? 'enable' : 'disable'](this.gl.CULL_FACE);\n    }\n\n    setFrontFace(value)\n    {\n        value = value ? 1 : 0;\n\n        if (this.activeState[FRONT_FACE] === value)\n        {\n            return;\n        }\n\n        this.activeState[FRONT_FACE] = value;\n        this.gl.frontFace(this.gl[value ? 'CW' : 'CCW']);\n    }\n}\n"]}