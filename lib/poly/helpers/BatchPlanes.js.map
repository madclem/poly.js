{"version":3,"sources":["../../../src/poly/helpers/BatchPlanes.js"],"names":["BatchPlanes","size","program","color","type","value","opacity","state","POLY","gl","depthTest","index","positions","indices","i","j","push","addPosition","addIndices","bind","GL","draw"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,W;;;AAEjB,2BACA;AAAA,YADYC,IACZ,uEADmB,EACnB;;AAAA;;AAEI,YAAIC,UAAU,kEAAwB;AAClCC,mBAAO;AACHC,sBAAM,MADH;AAEHC,uBAAO,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAFJ,aAD2B;AAKlCC,qBAAS;AACLF,sBAAM,OADD;AAELC,uBAAO;AAFF;AALyB,SAAxB,CAAd;AAUA,YAAIE,QAAQ,oBAAUC,KAAKC,EAAf,CAAZ;AACAF,cAAMG,SAAN,GAAkB,IAAlB;;AAbJ,8HAeUR,OAfV,EAemBK,KAfnB,EAe0B,CAf1B;;AAiBI,YAAII,QAAQ,CAAZ;AACA,YAAIC,YAAY,EAAhB;AACA,YAAIC,UAAU,EAAd;;AAEA,aAAK,IAAIC,IAAI,CAACb,IAAd,EAAoBa,IAAIb,IAAxB,EAA8Ba,GAA9B,EACA;AACI,iBAAK,IAAIC,IAAI,CAACd,IAAd,EAAoBc,IAAId,IAAxB,EAA8Bc,GAA9B,EACA;AACIH,0BAAUI,IAAV,CAAeF,CAAf,EAAkBC,CAAlB,EAAqB,CAArB;AACAF,wBAAQG,IAAR,CAAaL,KAAb;AACAA;;AAEAC,0BAAUI,IAAV,CAAeF,CAAf,EAAkB,CAAlB,EAAqBC,CAArB;AACAF,wBAAQG,IAAR,CAAaL,KAAb;AACAA;AACH;AACJ;;AAED,cAAKM,WAAL,CAAiBL,SAAjB,EAA4B,WAA5B;AACA,cAAKM,UAAL,CAAgBL,OAAhB;AApCJ;AAqCC;;;;+BAGD;AACI,iBAAKX,OAAL,CAAaiB,IAAb;AACAX,iBAAKY,EAAL,CAAQC,IAAR,CAAa,IAAb;AACH;;;;;;kBA9CgBrB,W","file":"BatchPlanes.js","sourcesContent":["import Mesh from '../geometry/Mesh';\r\nimport Program from '../Program';\r\nimport State from '../State';\r\nimport vert from '../shaders/planes-dot.vert';\r\nimport frag from '../shaders/simpleColor.frag';\r\n\r\nexport default class BatchPlanes extends Mesh\r\n{\r\n    constructor(size = 25)\r\n    {\r\n\r\n        let program = new Program(vert, frag, {\r\n            color: {\r\n                type: 'vec3',\r\n                value: [1., 1., 1.]\r\n            },\r\n            opacity: {\r\n                type: 'float',\r\n                value: .6\r\n            }\r\n        });\r\n        let state = new State(POLY.gl);\r\n        state.depthTest = true;\r\n\r\n        super(program, state, 0);\r\n\r\n        let index = 0;\r\n        let positions = [];\r\n        let indices = [];\r\n\r\n        for (let i = -size; i < size; i++)\r\n        {\r\n            for (let j = -size; j < size; j++)\r\n            {\r\n                positions.push(i, j, 0);\r\n                indices.push(index);\r\n                index++;\r\n\r\n                positions.push(i, 0, j);\r\n                indices.push(index);\r\n                index++;\r\n            }\r\n        }\r\n\r\n        this.addPosition(positions, 'aPosition');\r\n        this.addIndices(indices);\r\n    }\r\n\r\n    draw()\r\n    {\r\n        this.program.bind();\r\n        POLY.GL.draw(this);\r\n    }\r\n}\r\n"]}