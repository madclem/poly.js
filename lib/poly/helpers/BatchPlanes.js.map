{"version":3,"sources":["../../../src/poly/helpers/BatchPlanes.js"],"names":["BatchPlanes","size","program","color","type","value","opacity","state","depthTest","index","positions","indices","i","j","push","addPosition","addIndices","bind","POLY","GL","draw"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,W;;;AAEjB,2BACA;AAAA,YADYC,IACZ,uEADmB,EACnB;;AAAA;;AAEI,YAAIC,UAAU,kEAAwB;AAClCC,mBAAO;AACHC,sBAAM,MADH;AAEHC,uBAAO,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAFJ,aAD2B;AAKlCC,qBAAS;AACLF,sBAAM,OADD;AAELC,uBAAO;AAFF;AALyB,SAAxB,CAAd;AAUA,YAAIE,QAAQ,oBAAUL,OAAV,CAAZ;AACAK,cAAMC,SAAN,GAAkB,KAAlB;;AAbJ,8HAeUN,OAfV,EAemBK,KAfnB,EAe0B,CAf1B;;AAiBI,YAAIE,QAAQ,CAAZ;AACA,YAAIC,YAAY,EAAhB;AACA,YAAIC,UAAU,EAAd;;AAEA,aAAK,IAAIC,IAAI,CAACX,IAAd,EAAoBW,IAAIX,IAAxB,EAA8BW,GAA9B,EACA;AACI,iBAAK,IAAIC,IAAI,CAACZ,IAAd,EAAoBY,IAAIZ,IAAxB,EAA8BY,GAA9B,EACA;AACIH,0BAAUI,IAAV,CAAeF,CAAf,EAAkBC,CAAlB,EAAqB,CAArB;AACAF,wBAAQG,IAAR,CAAaL,KAAb;AACAA;;AAEAC,0BAAUI,IAAV,CAAeF,CAAf,EAAkB,CAAlB,EAAqBC,CAArB;AACAF,wBAAQG,IAAR,CAAaL,KAAb;AACAA;AACH;AACJ;;AAED,cAAKM,WAAL,CAAiBL,SAAjB,EAA4B,WAA5B;AACA,cAAKM,UAAL,CAAgBL,OAAhB;AApCJ;AAqCC;;;;+BAGD;AACI,iBAAKT,OAAL,CAAae,IAAb;AACAC,iBAAKC,EAAL,CAAQC,IAAR,CAAa,IAAb;AACH;;;;;;kBA9CgBpB,W","file":"BatchPlanes.js","sourcesContent":["import Mesh from '../geometry/Mesh';\nimport Program from '../Program';\nimport State from '../State';\nimport vert from '../shaders/planes-dot.vert';\nimport frag from '../shaders/simpleColor.frag';\n\nexport default class BatchPlanes extends Mesh\n{\n    constructor(size = 25)\n    {\n\n        let program = new Program(vert, frag, {\n            color: {\n                type: 'vec3',\n                value: [1., 1., 1.]\n            },\n            opacity: {\n                type: 'float',\n                value: .6\n            }\n        });\n        let state = new State(program);\n        state.depthTest = false;\n\n        super(program, state, 0);\n\n        let index = 0;\n        let positions = [];\n        let indices = [];\n\n        for (let i = -size; i < size; i++)\n        {\n            for (let j = -size; j < size; j++)\n            {\n                positions.push(i, j, 0);\n                indices.push(index);\n                index++;\n\n                positions.push(i, 0, j);\n                indices.push(index);\n                index++;\n            }\n        }\n\n        this.addPosition(positions, 'aPosition');\n        this.addIndices(indices);\n    }\n\n    draw()\n    {\n        this.program.bind();\n        POLY.GL.draw(this);\n    }\n}\n"]}